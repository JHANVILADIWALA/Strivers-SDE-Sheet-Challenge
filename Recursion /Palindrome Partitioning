https://www.codingninjas.com/codestudio/problems/799931?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=1

#include <bits/stdc++.h> 

//TC : O( (2^n) *k*(n/2) )
// O(2^n) to generate every substring 
// O(n/2)  to check if the substring generated is a palindrome
// O(k) is for inserting the palindromes
// k  is the average length of the palindrome

// SC:  O(k * x)
// x such list of palindromes 
// depth of the recursion tree is n => auxiliary space required is equal to the O(n)

//fn to check whether its a palindrome
bool formspalin(string s,int start,int end){
    while(start<=end){
        if(s[start]!=s[end])return false;
        start++;
        end--;
    }
    return true;
}

void fn(int ind,string s, vector<vector<string>>&ans,vector<string>&curr){
    if(ind==s.size()){
        ans.push_back(curr);
        return;
    }
    for(int i=ind;i<s.size();i++){
        //check if forms palindrome
        //then only add it
        if(formspalin(s,ind,i)){
            //push the substring(palindrome) in vector
            curr.push_back(s.substr(ind,i-ind+1));
            //call the fn for further
            fn(i+1,s,ans,curr);
            curr.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
     vector<vector<string>>ans;
     vector<string>curr;
     fn(0,s,ans,curr);
     return ans;
     
}
